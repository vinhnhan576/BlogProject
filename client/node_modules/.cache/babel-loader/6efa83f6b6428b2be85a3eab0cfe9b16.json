{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport Axios from 'axios';\nimport serverUrl from '../common';\nconst userUrl = 'api/user';\nexport const getUserByUsernameAsync = createAsyncThunk('api/user/getUserByUsernameAsync', async _ref => {\n  let {\n    username\n  } = _ref;\n  const response = await Axios.get(`${serverUrl}${userUrl}/get-user-by-username?username=${username}`);\n  const tasks = response.data;\n  return {\n    tasks\n  };\n});\nexport const updateUserAsync = createAsyncThunk('', async _ref2 => {\n  let {\n    userReq\n  } = _ref2;\n  const formData = new FormData();\n  formData.append('title', blogReqData.title);\n  formData.append('coverImg', blogReqData.coverImg);\n  formData.append('topicID', blogReqData.topicID);\n  formData.append('slug', blogReqData.slug);\n  formData.append('content', blogReqData.content);\n  formData.append('quote', blogReqData.quote);\n  formData.append('date', blogReqData.date);\n  formData.append('location', blogReqData.date);\n  const response = await Axios.put(`${serverUrl}${userUrl}/update-user`);\n});\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null\n  },\n  reducers: {},\n  extraReducers: {\n    [getUserByUsernameAsync.fulfilled]: (state, action) => {\n      console.log('get user by username successfully'); // state.user = action.payload.tasks;\n\n      return action.payload.tasks.result;\n    }\n  }\n});\nexport const {} = userSlice.actions;\nexport const selectUser = state => state.user.user;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Axios","serverUrl","userUrl","getUserByUsernameAsync","username","response","get","tasks","data","updateUserAsync","userReq","formData","FormData","append","blogReqData","title","coverImg","topicID","slug","content","quote","date","put","userSlice","name","initialState","user","reducers","extraReducers","fulfilled","state","action","console","log","payload","result","actions","selectUser","reducer"],"sources":["D:/Code/HTML/BlogProject/client/src/features/user/userSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport serverUrl from '../common';\r\n\r\nconst userUrl = 'api/user';\r\n\r\nexport const getUserByUsernameAsync = createAsyncThunk(\r\n    'api/user/getUserByUsernameAsync',\r\n    async ({username}) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${userUrl}/get-user-by-username?username=${username}`\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const updateUserAsync = createAsyncThunk('', async({userReq})=>{\r\n    \r\n        const formData = new FormData();\r\n        formData.append('title', blogReqData.title);\r\n        formData.append('coverImg', blogReqData.coverImg);\r\n        formData.append('topicID', blogReqData.topicID);\r\n        formData.append('slug', blogReqData.slug);\r\n        formData.append('content', blogReqData.content);\r\n        formData.append('quote', blogReqData.quote);\r\n        formData.append('date', blogReqData.date);\r\n        formData.append('location', blogReqData.date);\r\n    const response = await Axios.put(`${serverUrl}${userUrl}/update-user`, );\r\n})\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        user: null\r\n    },\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getUserByUsernameAsync.fulfilled]: (state, action) => {\r\n            console.log('get user by username successfully');\r\n            // state.user = action.payload.tasks;\r\n            return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {} = userSlice.actions;\r\n\r\nexport const selectUser = (state) => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,MAAMC,OAAO,GAAG,UAAhB;AAEA,OAAO,MAAMC,sBAAsB,GAAGJ,gBAAgB,CAClD,iCADkD,EAElD,cAAsB;EAAA,IAAf;IAACK;EAAD,CAAe;EAClB,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAClB,GAAEL,SAAU,GAAEC,OAAQ,kCAAiCE,QAAS,EAD9C,CAAvB;EAGA,MAAMG,KAAK,GAAGF,QAAQ,CAACG,IAAvB;EACA,OAAO;IAAED;EAAF,CAAP;AACH,CARiD,CAA/C;AAWP,OAAO,MAAME,eAAe,GAAGV,gBAAgB,CAAC,EAAD,EAAK,eAAkB;EAAA,IAAZ;IAACW;EAAD,CAAY;EAE9D,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;EACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBC,WAAW,CAACC,KAArC;EACAJ,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BC,WAAW,CAACE,QAAxC;EACAL,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BC,WAAW,CAACG,OAAvC;EACAN,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBC,WAAW,CAACI,IAApC;EACAP,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BC,WAAW,CAACK,OAAvC;EACAR,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBC,WAAW,CAACM,KAArC;EACAT,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBC,WAAW,CAACO,IAApC;EACAV,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BC,WAAW,CAACO,IAAxC;EACJ,MAAMhB,QAAQ,GAAG,MAAML,KAAK,CAACsB,GAAN,CAAW,GAAErB,SAAU,GAAEC,OAAQ,cAAjC,CAAvB;AACH,CAZ8C,CAAxC;AAcP,OAAO,MAAMqB,SAAS,GAAGzB,WAAW,CAAC;EACjC0B,IAAI,EAAE,MAD2B;EAEjCC,YAAY,EAAE;IACVC,IAAI,EAAE;EADI,CAFmB;EAKjCC,QAAQ,EAAE,EALuB;EAMjCC,aAAa,EAAE;IACX,CAACzB,sBAAsB,CAAC0B,SAAxB,GAAoC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACnDC,OAAO,CAACC,GAAR,CAAY,mCAAZ,EADmD,CAEnD;;MACA,OAAOF,MAAM,CAACG,OAAP,CAAe3B,KAAf,CAAqB4B,MAA5B;IACH;EALU;AANkB,CAAD,CAA7B;AAeP,OAAO,MAAM,KAAKZ,SAAS,CAACa,OAArB;AAEP,OAAO,MAAMC,UAAU,GAAIP,KAAD,IAAWA,KAAK,CAACJ,IAAN,CAAWA,IAAzC;AAEP,eAAeH,SAAS,CAACe,OAAzB"},"metadata":{},"sourceType":"module"}