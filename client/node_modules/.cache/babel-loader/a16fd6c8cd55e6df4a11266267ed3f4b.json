{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Axios from \"axios\";\nimport serverUrl from '../common';\nconst blogUrl = 'api/blog';\nexport const getBloggerByAliasAsync = createAsyncThunk(\"api/user/getBloggerByAliasAsync\", async alias => {\n  const response = await Axios.get(`${serverUrl}/api/user/get-user-by-alias?alias=${alias}`);\n  const tasks = response.data;\n  return {\n    tasks\n  };\n});\nexport const bloggerSlice = createSlice({\n  name: \"blogger\",\n  initialState: {\n    blogger: null\n  },\n  reducers: {},\n  extraReducers: {\n    [getBloggerByAliasAsync.fulfilled]: (state, action) => {\n      console.log(\"get blogger by alias successfully\"); // state.user = action.payload.tasks;\n\n      return action.payload.tasks;\n    }\n  }\n});\nexport const {} = bloggerSlice.actions;\nexport const selectBlogger = state => state.blogger.blogger;\nexport default bloggerSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Axios","serverUrl","blogUrl","getBloggerByAliasAsync","alias","response","get","tasks","data","bloggerSlice","name","initialState","blogger","reducers","extraReducers","fulfilled","state","action","console","log","payload","actions","selectBlogger","reducer"],"sources":["D:/Code/HTML/BlogProject/client/src/features/user/bloggerSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\nimport serverUrl from '../common';\r\n\r\nconst blogUrl = 'api/blog';\r\n\r\nexport const getBloggerByAliasAsync = createAsyncThunk(\r\n\t\"api/user/getBloggerByAliasAsync\",\r\n\tasync (alias) => {\r\n\t\tconst response = await Axios.get(\r\n\t\t\t`${serverUrl}/api/user/get-user-by-alias?alias=${alias}`\r\n\t\t);\r\n\t\tconst tasks = response.data;\r\n\t\treturn { tasks };\r\n\t}\r\n);\r\n\r\nexport const bloggerSlice = createSlice({\r\n\tname: \"blogger\",\r\n\tinitialState: {\r\n\t\tblogger: null,\r\n\t},\r\n\treducers: {},\r\n\textraReducers: {\r\n\t\t[getBloggerByAliasAsync.fulfilled]: (state, action) => {\r\n\t\t\tconsole.log(\"get blogger by alias successfully\");\r\n\t\t\t// state.user = action.payload.tasks;\r\n\t\t\treturn action.payload.tasks;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const {} = bloggerSlice.actions;\r\n\r\nexport const selectBlogger = (state) => state.blogger.blogger;\r\n\r\nexport default bloggerSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,MAAMC,OAAO,GAAG,UAAhB;AAEA,OAAO,MAAMC,sBAAsB,GAAGJ,gBAAgB,CACrD,iCADqD,EAErD,MAAOK,KAAP,IAAiB;EAChB,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CACrB,GAAEL,SAAU,qCAAoCG,KAAM,EADjC,CAAvB;EAGA,MAAMG,KAAK,GAAGF,QAAQ,CAACG,IAAvB;EACA,OAAO;IAAED;EAAF,CAAP;AACA,CARoD,CAA/C;AAWP,OAAO,MAAME,YAAY,GAAGX,WAAW,CAAC;EACvCY,IAAI,EAAE,SADiC;EAEvCC,YAAY,EAAE;IACbC,OAAO,EAAE;EADI,CAFyB;EAKvCC,QAAQ,EAAE,EAL6B;EAMvCC,aAAa,EAAE;IACd,CAACX,sBAAsB,CAACY,SAAxB,GAAoC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACtDC,OAAO,CAACC,GAAR,CAAY,mCAAZ,EADsD,CAEtD;;MACA,OAAOF,MAAM,CAACG,OAAP,CAAeb,KAAtB;IACA;EALa;AANwB,CAAD,CAAhC;AAeP,OAAO,MAAM,KAAKE,YAAY,CAACY,OAAxB;AAEP,OAAO,MAAMC,aAAa,GAAIN,KAAD,IAAWA,KAAK,CAACJ,OAAN,CAAcA,OAA/C;AAEP,eAAeH,YAAY,CAACc,OAA5B"},"metadata":{},"sourceType":"module"}