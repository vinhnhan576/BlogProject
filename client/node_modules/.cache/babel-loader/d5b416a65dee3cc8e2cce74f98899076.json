{"ast":null,"code":"import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@aws-sdk/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-browser\";\nexport const getRuntimeConfig = config => {\n  const defaultsMode = resolveDefaultsModeConfig(config);\n\n  const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n\n  const clientSharedValues = getSharedRuntimeConfig(config);\n  return { ...clientSharedValues,\n    ...config,\n    runtime: \"browser\",\n    defaultsMode,\n    bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n    credentialDefaultProvider: config?.credentialDefaultProvider ?? (_ => () => Promise.reject(new Error(\"Credential is missing\"))),\n    defaultUserAgentProvider: config?.defaultUserAgentProvider ?? defaultUserAgent({\n      serviceId: clientSharedValues.serviceId,\n      clientVersion: packageInfo.version\n    }),\n    maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n    region: config?.region ?? invalidProvider(\"Region is missing\"),\n    requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n    retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n    sha256: config?.sha256 ?? Sha256,\n    streamCollector: config?.streamCollector ?? streamCollector,\n    useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n    useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8\n  };\n};","map":{"version":3,"names":["packageInfo","Sha256","DEFAULT_USE_DUALSTACK_ENDPOINT","DEFAULT_USE_FIPS_ENDPOINT","FetchHttpHandler","RequestHandler","streamCollector","invalidProvider","calculateBodyLength","DEFAULT_MAX_ATTEMPTS","DEFAULT_RETRY_MODE","defaultUserAgent","fromUtf8","toUtf8","getRuntimeConfig","getSharedRuntimeConfig","loadConfigsForDefaultMode","resolveDefaultsModeConfig","config","defaultsMode","defaultConfigProvider","then","clientSharedValues","runtime","bodyLengthChecker","credentialDefaultProvider","_","Promise","reject","Error","defaultUserAgentProvider","serviceId","clientVersion","version","maxAttempts","region","requestHandler","retryMode","sha256","useDualstackEndpoint","resolve","useFipsEndpoint","utf8Decoder","utf8Encoder"],"sources":["D:/Code/HTML/BlogProject/node_modules/@aws-sdk/client-cognito-identity/dist-es/runtimeConfig.browser.js"],"sourcesContent":["import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@aws-sdk/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,iBAAxB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,8BAAT,EAAyCC,yBAAzC,QAA0E,0BAA1E;AACA,SAASC,gBAAgB,IAAIC,cAA7B,EAA6CC,eAA7C,QAAoE,6BAApE;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,mBAAT,QAAoC,mCAApC;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,QAAyD,qBAAzD;AACA,SAASC,gBAAT,QAAiC,kCAAjC;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,4BAAjC;AACA,SAASC,gBAAgB,IAAIC,sBAA7B,QAA2D,wBAA3D;AACA,SAASC,yBAAT,QAA0C,wBAA1C;AACA,SAASC,yBAAT,QAA0C,qCAA1C;AACA,OAAO,MAAMH,gBAAgB,GAAII,MAAD,IAAY;EACxC,MAAMC,YAAY,GAAGF,yBAAyB,CAACC,MAAD,CAA9C;;EACA,MAAME,qBAAqB,GAAG,MAAMD,YAAY,GAAGE,IAAf,CAAoBL,yBAApB,CAApC;;EACA,MAAMM,kBAAkB,GAAGP,sBAAsB,CAACG,MAAD,CAAjD;EACA,OAAO,EACH,GAAGI,kBADA;IAEH,GAAGJ,MAFA;IAGHK,OAAO,EAAE,SAHN;IAIHJ,YAJG;IAKHK,iBAAiB,EAAEN,MAAM,EAAEM,iBAAR,IAA6BhB,mBAL7C;IAMHiB,yBAAyB,EAAEP,MAAM,EAAEO,yBAAR,KAAuCC,CAAD,IAAO,MAAMC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,uBAAV,CAAf,CAAnD,CANxB;IAOHC,wBAAwB,EAAEZ,MAAM,EAAEY,wBAAR,IACtBnB,gBAAgB,CAAC;MAAEoB,SAAS,EAAET,kBAAkB,CAACS,SAAhC;MAA2CC,aAAa,EAAEhC,WAAW,CAACiC;IAAtE,CAAD,CARjB;IASHC,WAAW,EAAEhB,MAAM,EAAEgB,WAAR,IAAuBzB,oBATjC;IAUH0B,MAAM,EAAEjB,MAAM,EAAEiB,MAAR,IAAkB5B,eAAe,CAAC,mBAAD,CAVtC;IAWH6B,cAAc,EAAElB,MAAM,EAAEkB,cAAR,IAA0B,IAAI/B,cAAJ,CAAmBe,qBAAnB,CAXvC;IAYHiB,SAAS,EAAEnB,MAAM,EAAEmB,SAAR,KAAsB,YAAY,CAAC,MAAMjB,qBAAqB,EAA5B,EAAgCiB,SAAhC,IAA6C3B,kBAA/E,CAZR;IAaH4B,MAAM,EAAEpB,MAAM,EAAEoB,MAAR,IAAkBrC,MAbvB;IAcHK,eAAe,EAAEY,MAAM,EAAEZ,eAAR,IAA2BA,eAdzC;IAeHiC,oBAAoB,EAAErB,MAAM,EAAEqB,oBAAR,KAAiC,MAAMZ,OAAO,CAACa,OAAR,CAAgBtC,8BAAhB,CAAvC,CAfnB;IAgBHuC,eAAe,EAAEvB,MAAM,EAAEuB,eAAR,KAA4B,MAAMd,OAAO,CAACa,OAAR,CAAgBrC,yBAAhB,CAAlC,CAhBd;IAiBHuC,WAAW,EAAExB,MAAM,EAAEwB,WAAR,IAAuB9B,QAjBjC;IAkBH+B,WAAW,EAAEzB,MAAM,EAAEyB,WAAR,IAAuB9B;EAlBjC,CAAP;AAoBH,CAxBM"},"metadata":{},"sourceType":"module"}